CREATE OR REPLACE PROCEDURE SP_LOAN_ALGORITHM_2(P_LOAN_AMNT NUMBER,
                                              P_COMD_NAME VARCHAR2) AS
  LN_LOAN_AMNT INVENTORY_DTLS.ASSET_AMNT%TYPE := P_LOAN_AMNT;

  CURSOR CUR_INV_DATA IS
    SELECT ID.INV_ID,
           ID.ASSET_AMNT,
           NVL(ID.AVBL_AMNT, ID.ASSET_AMNT) AVBL_AMNT,
           ID.FRACTION
      FROM INVENTORY_DTLS ID, MST_COMMODITY MC
     WHERE ID.COMD_ID = MC.COMD_ID
       AND MC.COMD_NAME = UPPER(P_COMD_NAME)
       AND ID.ASSET_AMNT <> NVL(ID.LOCK_AMNT, 0)
       AND ID.STATUS = 'A'
       AND MC.STATUS = 'A'
     ORDER BY ID.OFFER_DATE;
  --WITH 'UPDATE' AND 'DELETE' WE SHOULD WRITE WHERE CLAUSE
BEGIN
  IF SF_GET_LOAN_STATUS(P_LOAN_AMNT, P_COMD_NAME) THEN
    FOR I IN CUR_INV_DATA LOOP
      IF LN_LOAN_AMNT > I.AVBL_AMNT THEN
        DBMS_OUTPUT.PUT_LINE('LN_LOAN AMNT-->'||LN_LOAN_AMNT)
        UPDATE INVENTORY_DTLS ID
           SET ID.AVBL_AMNT = 0, ID.LOCK_AMNT = ID.ASSET_AMNT
         WHERE ID.INV_ID = I.INV_ID;
        LN_LOAN_AMNT := LN_LOAN_AMNT - I.AVBL_AMNT;
      ELSIF LN_LOAN_AMNT = I.AVBL_AMNT THEN
        UPDATE INVENTORY_DTLS ID
           SET ID.AVBL_AMNT = 0, ID.LOCK_AMNT = ID.ASSET_AMNT
         WHERE ID.INV_ID = I.INV_ID;
        LN_LOAN_AMNT := 0;
      ELSIF LN_LOAN_AMNT < I.AVBL_AMNT AND I.FRACTION = 'Y' THEN
        UPDATE INVENTORY_DTLS ID
           SET ID.AVBL_AMNT = NVL(ID.AVBL_AMNT, ID.ASSET_AMNT) -
                              LN_LOAN_AMNT,
               ID.LOCK_AMNT = NVL(ID.LOCK_AMNT, 0) + LN_LOAN_AMNT
         WHERE ID.INV_ID = I.INV_ID;
        LN_LOAN_AMNT := 0;
      END IF;
      IF LN_LOAN_AMNT = 0 THEN
        EXIT;
      END IF;
    END LOOP;
  ELSE
    RAISE_APPLICATION_ERROR(-20300,
                            'BANK DOES NOT HAVE FUNDS TO GIVE LOAN FOR THIS COMMODITY');
  
  END IF;
END;
/
